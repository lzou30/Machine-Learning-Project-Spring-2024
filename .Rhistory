# Clear all
rm(list = ls())
# Setup
knitr::opts_chunk$set(echo = TRUE)
# Load packages
pacman::p_load(tidyverse, ggplot2, scales, glmnet, pls, randomForest, rpart, DescTools, dplyr, readxl, readr)
# Set custom theme
MK_theme <-   theme(text = element_text(family = "Times New Roman"),
panel.background = element_blank(),
axis.text.x.bottom = element_text(size = 12),
axis.text.y.left = element_text(size = 12),
axis.title.x.bottom = element_text(size = 16),
axis.title.y.left = element_text(size = 16),
title = element_text(size = 16, face = "bold"),
panel.border = element_rect(color = "black", linewidth = 0.3, fill = "transparent"),
panel.grid = element_line(color = "black", linewidth = 0.1),
legend.position = "none")
# Bring in data
group1 <- read_csv("C:/Users/lzou7/OneDrive/Desktop/GWU/ML in R/Project/group1.csv")
colnames(group1)
group1 <- group1[,-1]
# Add leading zero
add_char <- function(x, pos, insert) {
gsub(paste0("^(.{", pos, "})(.*)$"),
paste0("\\1", insert, "\\2"),
x)
}
which(nchar(group1$ZIP.code) == 4) # no four-digit zip codes
group1.1 <- group1 %>%
filter(State != "AE" & State != "AP") # Remove non-state observations
# Load in zip_fips
zip_fips <- read_csv("C:/Users/lzou7/OneDrive/Desktop/GWU/ML in R/Project/zip_fips.csv")
colnames(zip_fips)
zip_fips <- zip_fips[,-1]
str(zip_fips$ZIP)
table(zip_fips$STATE)
# Filter non-US states
zip_fips_states <- zip_fips %>%
filter(STATE != "PR" & STATE != "GU" & STATE != "DC" & STATE != "VI")
# Add a leading zero if zip is only four characters long
zip_fips_states$ZIP <- ifelse(nchar(zip_fips_states$ZIP) == 4, add_char(x = zip_fips_states$ZIP,
pos = 0,
insert = "0"), zip_fips_states$ZIP)
# Merge datasets to find odd zip codes
group1.2 <- merge(group1.1, zip_fips_states,
by.x = c("ZIP.code", "State"),
by.y = c("ZIP", "STATE"), all.x = TRUE)
group1.2$missing_zip <- as.factor(is.na(group1.2$STCOUNTYFP))
group1.2 <- group1.2[,-15] # Drop company response to consumer
# group1_merged$missing <- as.factor(complete.cases(group1_merged))
# group1_merged <- group1_merged[,-c(20:21)]
# group1_merged$ZIP.code <- as.factor(group1_merged$ZIP.code)
# noy <- is.na(group1_merged$relief)
# group1_merged <- group1_merged[which(noy == 0),]
View(group1.2)
View(group1.2)
View(add_char)
# Clear all
rm(list = ls())
# Setup
knitr::opts_chunk$set(echo = TRUE)
# Load packages
pacman::p_load(tidyverse, ggplot2, scales, glmnet, pls, randomForest, rpart, DescTools, dplyr, readxl, readr)
# Set custom theme
MK_theme <-   theme(text = element_text(family = "Times New Roman"),
panel.background = element_blank(),
axis.text.x.bottom = element_text(size = 12),
axis.text.y.left = element_text(size = 12),
axis.title.x.bottom = element_text(size = 16),
axis.title.y.left = element_text(size = 16),
title = element_text(size = 16, face = "bold"),
panel.border = element_rect(color = "black", linewidth = 0.3, fill = "transparent"),
panel.grid = element_line(color = "black", linewidth = 0.1),
legend.position = "none")
# Bring in data
group1 <- read_csv("C:/Users/lzou7/OneDrive/Desktop/GWU/ML in R/Project/group1.csv")
colnames(group1)
group1 <- group1[,-1]
# Add leading zero
add_char <- function(x, pos, insert) {
gsub(paste0("^(.{", pos, "})(.*)$"),
paste0("//1", insert, "//2"),
x)
}
which(nchar(group1$ZIP.code) == 4) # no four-digit zip codes
group1.1 <- group1 %>%
filter(State != "AE" & State != "AP") # Remove non-state observations
# Load in zip_fips
zip_fips <- read_csv("C:/Users/lzou7/OneDrive/Desktop/GWU/ML in R/Project/zip_fips.csv")
colnames(zip_fips)
zip_fips <- zip_fips[,-1]
str(zip_fips$ZIP)
table(zip_fips$STATE)
# Filter non-US states
zip_fips_states <- zip_fips %>%
filter(STATE != "PR" & STATE != "GU" & STATE != "DC" & STATE != "VI")
# Add a leading zero if zip is only four characters long
zip_fips_states$ZIP <- ifelse(nchar(zip_fips_states$ZIP) == 4, add_char(x = zip_fips_states$ZIP,
pos = 0,
insert = "0"), zip_fips_states$ZIP)
# Merge datasets to find odd zip codes
group1.2 <- merge(group1.1, zip_fips_states,
by.x = c("ZIP.code", "State"),
by.y = c("ZIP", "STATE"), all.x = TRUE)
group1.2$missing_zip <- as.factor(is.na(group1.2$STCOUNTYFP))
group1.2 <- group1.2[,-15] # Drop company response to consumer
# group1_merged$missing <- as.factor(complete.cases(group1_merged))
# group1_merged <- group1_merged[,-c(20:21)]
# group1_merged$ZIP.code <- as.factor(group1_merged$ZIP.code)
# noy <- is.na(group1_merged$relief)
# group1_merged <- group1_merged[which(noy == 0),]
View(group1.2)
# Bring in data
group1 <- read_csv("C:/Users/lzou7/OneDrive/Desktop/GWU/ML in R/Project/group1.csv")
colnames(group1)
group1 <- group1[,-1]
# Add leading zero
add_char <- function(x, pos, insert) {
gsub(paste0("^(.{", pos, "})(.*)$"),
paste0("\\1", insert, "\\2"),
x)
}
which(nchar(group1$ZIP.code) == 4) # no four-digit zip codes
group1.1 <- group1 %>%
filter(State != "AE" & State != "AP") # Remove non-state observations
# Load in zip_fips
zip_fips <- read_csv("C:/Users/lzou7/OneDrive/Desktop/GWU/ML in R/Project/zip_fips.csv")
colnames(zip_fips)
zip_fips <- zip_fips[,-1]
str(zip_fips$ZIP)
table(zip_fips$STATE)
# Filter non-US states
zip_fips_states <- zip_fips %>%
filter(STATE != "PR" & STATE != "GU" & STATE != "DC" & STATE != "VI")
# Add a leading zero if zip is only four characters long
zip_fips_states$ZIP <- ifelse(nchar(zip_fips_states$ZIP) == 4, add_char(x = zip_fips_states$ZIP,
pos = 0,
insert = "0"), zip_fips_states$ZIP)
# Merge datasets to find odd zip codes
group1.2 <- merge(group1.1, zip_fips_states,
by.x = c("ZIP.code", "State"),
by.y = c("ZIP", "STATE"), all.x = TRUE)
group1.2$missing_zip <- as.factor(is.na(group1.2$STCOUNTYFP))
group1.2 <- group1.2[,-15] # Drop company response to consumer
# group1_merged$missing <- as.factor(complete.cases(group1_merged))
# group1_merged <- group1_merged[,-c(20:21)]
# group1_merged$ZIP.code <- as.factor(group1_merged$ZIP.code)
# noy <- is.na(group1_merged$relief)
# group1_merged <- group1_merged[which(noy == 0),]
# Bring in data
group1 <- read_csv("C:/Users/lzou7/OneDrive/Desktop/GWU/ML in R/Project/group1.csv")
colnames(group1)
group1 <- group1[,-1]
# Add leading zero
add_char <- function(x, pos, insert) {
gsub(paste0("^(.{", pos, "})(.*)$"),
paste0("\\1", insert, "\\2"),
x)
}
which(nchar(group1$ZIP.code) == 4) # no four-digit zip codes
group1.1 <- group1 %>%
filter(State != "AE" & State != "AP") # Remove non-state observations
# Load in zip_fips
zip_fips <- read_csv("C:/Users/lzou7/OneDrive/Desktop/GWU/ML in R/Project/zip_fips.csv")
colnames(zip_fips)
zip_fips <- zip_fips[,-1]
str(zip_fips$ZIP)
table(zip_fips$STATE)
# Filter non-US states
zip_fips_states <- zip_fips %>%
filter(STATE != "PR" & STATE != "GU" & STATE != "DC" & STATE != "VI")
# Add a leading zero if zip is only four characters long
zip_fips_states$ZIP <- ifelse(nchar(zip_fips_states$ZIP) == 4,
add_char(x = zip_fips_states$ZIP, pos = 0, insert = "0"),
zip_fips_states$ZIP)
# Merge datasets to find odd zip codes
group1.2 <- merge(group1.1, zip_fips_states,
by.x = c("ZIP.code", "State"),
by.y = c("ZIP", "STATE"), all.x = TRUE)
group1.2$missing_zip <- as.factor(is.na(group1.2$STCOUNTYFP))
group1.2 <- group1.2[,-15] # Drop company response to consumer
# group1_merged$missing <- as.factor(complete.cases(group1_merged))
# group1_merged <- group1_merged[,-c(20:21)]
# group1_merged$ZIP.code <- as.factor(group1_merged$ZIP.code)
# noy <- is.na(group1_merged$relief)
# group1_merged <- group1_merged[which(noy == 0),]
View(group1.2)
cat("Number of ZIP codes with 4 characters:", sum(nchar(zip_fips_states$ZIP) == 4), "\n")
# Add a leading zero if zip is only four characters long
zip_fips_states$ZIP <- add_char(x = zip_fips_states$ZIP[nchar(zip_fips_states$ZIP) == 4], pos = 0, insert = "0")
cat("Number of ZIP codes with 4 characters:", sum(nchar(zip_fips_states$ZIP) == 4), "\n")
